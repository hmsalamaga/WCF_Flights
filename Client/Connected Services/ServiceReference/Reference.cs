//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Flight", Namespace="http://schemas.datacontract.org/2004/07/Host.Objects")]
    [System.SerializableAttribute()]
    public partial class Flight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TimeAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TimeBField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortA {
            get {
                return this.PortAField;
            }
            set {
                if ((object.ReferenceEquals(this.PortAField, value) != true)) {
                    this.PortAField = value;
                    this.RaisePropertyChanged("PortA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortB {
            get {
                return this.PortBField;
            }
            set {
                if ((object.ReferenceEquals(this.PortBField, value) != true)) {
                    this.PortBField = value;
                    this.RaisePropertyChanged("PortB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeA {
            get {
                return this.TimeAField;
            }
            set {
                if ((this.TimeAField.Equals(value) != true)) {
                    this.TimeAField = value;
                    this.RaisePropertyChanged("TimeA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeB {
            get {
                return this.TimeBField;
            }
            set {
                if ((this.TimeBField.Equals(value) != true)) {
                    this.TimeBField = value;
                    this.RaisePropertyChanged("TimeB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IFlightSchedule")]
    public interface IFlightSchedule {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightSchedule/GetFlightSchedule", ReplyAction="http://tempuri.org/IFlightSchedule/GetFlightScheduleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ServiceModel.FaultException), Action="http://tempuri.org/IFlightSchedule/GetFlightScheduleFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceModel")]
        Client.ServiceReference.Flight[] GetFlightSchedule(string portA, string portB, System.Nullable<System.TimeSpan> timeA, System.Nullable<System.TimeSpan> timeB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightSchedule/GetFlightSchedule", ReplyAction="http://tempuri.org/IFlightSchedule/GetFlightScheduleResponse")]
        System.Threading.Tasks.Task<Client.ServiceReference.Flight[]> GetFlightScheduleAsync(string portA, string portB, System.Nullable<System.TimeSpan> timeA, System.Nullable<System.TimeSpan> timeB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightSchedule/TestConnection", ReplyAction="http://tempuri.org/IFlightSchedule/TestConnectionResponse")]
        bool TestConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightSchedule/TestConnection", ReplyAction="http://tempuri.org/IFlightSchedule/TestConnectionResponse")]
        System.Threading.Tasks.Task<bool> TestConnectionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFlightScheduleChannel : Client.ServiceReference.IFlightSchedule, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlightScheduleClient : System.ServiceModel.ClientBase<Client.ServiceReference.IFlightSchedule>, Client.ServiceReference.IFlightSchedule {
        
        public FlightScheduleClient() {
        }
        
        public FlightScheduleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlightScheduleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightScheduleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightScheduleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ServiceReference.Flight[] GetFlightSchedule(string portA, string portB, System.Nullable<System.TimeSpan> timeA, System.Nullable<System.TimeSpan> timeB) {
            return base.Channel.GetFlightSchedule(portA, portB, timeA, timeB);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReference.Flight[]> GetFlightScheduleAsync(string portA, string portB, System.Nullable<System.TimeSpan> timeA, System.Nullable<System.TimeSpan> timeB) {
            return base.Channel.GetFlightScheduleAsync(portA, portB, timeA, timeB);
        }
        
        public bool TestConnection() {
            return base.Channel.TestConnection();
        }
        
        public System.Threading.Tasks.Task<bool> TestConnectionAsync() {
            return base.Channel.TestConnectionAsync();
        }
    }
}
